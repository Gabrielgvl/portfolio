---
import Layout from '@/layouts/Layout.astro';
import Hero from '@/components/Hero.astro';
import { format } from 'date-fns';
import { ptBR } from 'date-fns/locale';
import { Image } from 'astro:assets';
import avatarImage from '../../assets/avatar.png';
import { getCollection, type CollectionEntry } from 'astro:content';
import { getLocaleFromUrl, useTranslations, useTranslatedPath } from '@/i18n/utils';

type BlogPost = CollectionEntry<'blog'>;

const locale = getLocaleFromUrl(Astro.url);
const t = useTranslations(locale);
const translatePath = useTranslatedPath(locale);
const title = t('blog.meta.title');

// Get blog posts for the current locale
const allPosts = await getCollection('blog', ({ id }) => {
  const [slug, localeFile] = id.split('/');
  return localeFile === locale;
});

const sortedPosts = allPosts.sort(
  (a: BlogPost, b: BlogPost) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
);

const categories = [...new Set(allPosts.map((post: BlogPost) => post.data.category))] as string[];
const tags = [...new Set(allPosts.flatMap((post: BlogPost) => post.data.tags))] as string[];
---

<Layout title={title} description={t('meta.description')}>
  <div class="container mx-auto px-4 py-8">
    <Hero title={t('blog.hero.title')} description={t('blog.hero.description')} />

    <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
      <!-- Sidebar -->
      <aside class="lg:col-span-1">
        <div class="sticky top-24">
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 mb-8">
            <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
              {t('blog.categories.title')}
            </h2>
            <ul class="space-y-2">
              {categories.map((category) => (
                <li>
                  <a
                    href={translatePath(`/blog/categoria/${category.toLowerCase()}`)}
                    class="text-gray-600 hover:text-primary-600 dark:text-gray-400 dark:hover:text-primary-400"
                  >
                    {category}
                  </a>
                </li>
              ))}
            </ul>
          </div>

          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
            <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
              {t('blog.tags.title')}
            </h2>
            <div class="flex flex-wrap gap-2">
              {tags.map((tag) => (
                <a
                  href={translatePath(`/blog/tag/${tag.toLowerCase()}`)}
                  class="px-3 py-1 text-sm bg-primary-100 text-primary-800 dark:bg-primary-900 dark:text-primary-200 rounded-full hover:bg-primary-200 dark:hover:bg-primary-800 transition-colors"
                >
                  {tag}
                </a>
              ))}
            </div>
          </div>
        </div>
      </aside>

      <!-- Main Content -->
      <main class="lg:col-span-3">
        <div class="space-y-8">
          {sortedPosts.map((post: BlogPost) => {
            const [slug] = post.id.split('/');
            return (
              <article class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden">
                <div class="p-6">
                  <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2">
                    <span>
                      {t('blog.posts.published_on')}{' '}
                      {format(post.data.publishDate, 'dd MMMM, yyyy', { locale: ptBR })}
                    </span>
                    <span class="mx-2">•</span>
                    <span>{post.data.category}</span>
                  </div>
                  <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
                    <a
                      href={translatePath(`/blog/${slug}`)}
                      class="hover:text-primary-600 dark:hover:text-primary-400"
                    >
                      {post.data.title}
                    </a>
                  </h2>
                  <p class="text-gray-600 dark:text-gray-400 mb-4">{post.data.description}</p>
                  <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-4">
                      <Image
                        src={avatarImage}
                        alt={post.data.author}
                        class="object-cover w-10 h-10 rounded-full"
                      />
                      <span class="text-sm text-gray-600 dark:text-gray-400">
                        {post.data.author}
                      </span>
                    </div>
                    <a
                      href={translatePath(`/blog/${slug}`)}
                      class="text-primary-600 hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300 font-medium"
                    >
                      {t('blog.posts.read_more')} →
                    </a>
                  </div>
                </div>
              </article>
            );
          })}
        </div>
      </main>
    </div>
  </div>
</Layout>
