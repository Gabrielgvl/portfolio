---
import Layout from '../layouts/Layout.astro';
import { Image } from 'astro:assets';
import { t, l } from 'astro-i18n';
import profileImage from '../assets/profile.png';

const skills = {
  languages: ['Golang', 'Python', 'JavaScript', 'TypeScript', 'Java', 'SQL'],
  frontend: ['React', 'Next.js', 'Tailwind CSS', 'RecoilJS', 'Wicket'],
  backend: ['Golang', 'Python', 'Spring', 'AWS', 'PostgreSQL', 'Machine Learning'],
  tools: ['Git', 'Docker', 'AWS', 'Azure DevOps', 'Linux', 'CI/CD', 'HubSpot', 'Redshift'],
  soft: [
    'Liderança Técnica',
    'Mentoria',
    'Docência',
    'Resolução de Problemas',
    'Trabalho em Equipe',
    'Comunicação',
  ],
};

const experiences = [
  {
    title: 'Senior Software Engineer',
    company: 'Mercado Livre',
    period: 'setembro 2021 - presente',
    description:
      'Liderança em projetos críticos de logística, com foco em desenvolvimento de soluções inovadoras e otimização de performance usando Golang.',
    achievements: [
      'Liderança técnica na implementação e otimização do aplicativo de restrições logísticas',
      'Desenvolvimento de algoritmos de Machine Learning para previsão de viabilidade de transporte',
      'Integração e mentoria de novos membros da equipe',
      'Implementação de práticas de engenharia que elevaram o patamar operacional',
      'Contribuição para a transformação de desafios em oportunidades através de soluções inovadoras',
    ],
  },
  {
    title: 'Senior Software Engineer',
    company: 'Varsity Tutors',
    period: 'março 2023 - presente',
    description:
      'Desenvolvimento de soluções inovadoras em Golang para integração de dados e aprimoramento de sistemas críticos.',
    achievements: [
      'Consolidação de dados do HubSpot para AWS Redshift',
      'Implementação de funcionalidades de autenticação via SSO',
      'Otimização de performance em sistemas críticos',
      'Colaboração com equipes internacionais em projetos de alta complexidade',
    ],
  },
  {
    title: 'Analyst Developer',
    company: 'Ambev Tech',
    period: 'janeiro 2021 - agosto 2021',
    description:
      'Desenvolvimento de e-commerces escaláveis utilizando tecnologias modernas como React, TypeScript e RecoilJS.',
    achievements: [
      'Desenvolvimento de e-commerces robustos e escaláveis',
      'Implementação de pipelines CI/CD no Azure DevOps',
      'Revisão e manutenção da qualidade do código',
      'Definição e implementação de novas features',
    ],
  },
  {
    title: 'Professor',
    company: 'UniCEUB',
    period: '2022 - 2024',
    description:
      'Professor de programação e lógica computacional, contribuindo para a formação de futuros profissionais de tecnologia.',
    achievements: [
      'Ministração de aulas de programação e lógica computacional',
      'Desenvolvimento de material didático e projetos práticos',
      'Mentoria de alunos em projetos de desenvolvimento',
    ],
  },
];

const education = [
  {
    degree: 'Pós-graduação em Data Science e Machine Learning',
    institution: 'UniCEUB',
    year: '2020 - 2022',
  },
  {
    degree: 'Graduação em Ciência da Computação',
    institution: 'UniCEUB',
    year: '2016 - 2019',
  },
];

const certifications = [
  {
    name: 'AWS Fundamentals: Going Cloud-Native',
    issuer: 'AWS',
    year: '2023',
  },
  {
    name: 'AWS Fundamentals: Building Serverless Applications',
    issuer: 'AWS',
    year: '2023',
  },
  {
    name: 'Applied Data Science with Python',
    issuer: 'Coursera',
    year: '2022',
  },
  {
    name: 'Full-Stack Web Development with React',
    issuer: 'Coursera',
    year: '2022',
  },
];
---

<Layout
  title={t('meta.title')}
  description={t('meta.description')}
>
  <div class="container mx-auto px-4 py-16">
    <div class="max-w-4xl mx-auto">
      <!-- Hero Section -->
      <div class="text-center mb-16">
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
          {t('hero.title')}
        </h1>
        <p class="text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
          {t('hero.description')}
        </p>
      </div>

      <!-- Profile Section -->
      <div class="mb-16">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden">
          <div class="md:flex">
            <div class="w-full md:w-64 relative aspect-square">
              <Image
                src={profileImage}
                alt="Gabriel Lima"
                quality={100}
                class="object-cover w-full h-full rounded-t-lg md:rounded-l-lg md:rounded-t-none"
              />
            </div>
            <div class="p-8 flex-1">
              <div
                class="uppercase tracking-wide text-sm text-primary-600 dark:text-primary-400 font-semibold"
              >
                {t('experience.title')}
              </div>
              <p class="mt-2 text-gray-600 dark:text-gray-400">
                {t('experience.description')}
              </p>
              <div class="mt-4">
                <a
                  href={l('/contact')}
                  class="inline-flex items-center text-primary-600 hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300"
                >
                  {t('cta.contact')} →
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Skills Section -->
      <div class="mb-16">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">{t('skills.title')}</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          {
            Object.entries(skills).map(([category, items]) => (
              <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
                <h3 class="text-lg font-semibold text-gray-900 dark:text-white capitalize mb-4">
                  {t(`skills.${category}`)}
                </h3>
                <div class="flex flex-wrap gap-2">
                  {items.map((item) => (
                    <span class="px-3 py-1 text-sm bg-primary-100 text-primary-800 dark:bg-primary-900 dark:text-primary-200 rounded-full">
                      {item}
                    </span>
                  ))}
                </div>
              </div>
            ))
          }
        </div>
      </div>

      <!-- Experience Section -->
      <div class="mb-16">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">
          {t('experience.title')}
        </h2>
        <div class="space-y-8">
          {
            experiences.map((exp) => (
              <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
                <div class="flex justify-between items-start mb-4">
                  <div>
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-white">{exp.title}</h3>
                    <p class="text-primary-600 dark:text-primary-400">{exp.company}</p>
                  </div>
                  <span class="text-sm text-gray-500 dark:text-gray-400">{exp.period}</span>
                </div>
                <p class="text-gray-600 dark:text-gray-400 mb-4">{exp.description}</p>
                <ul class="list-disc list-inside space-y-2 text-gray-600 dark:text-gray-400">
                  {exp.achievements.map((achievement) => (
                    <li>{achievement}</li>
                  ))}
                </ul>
              </div>
            ))
          }
        </div>
      </div>

      <!-- Education & Certifications -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <div>
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">{t('education.title')}</h2>
          <div class="space-y-6">
            {
              education.map((edu) => (
                <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
                  <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                    {edu.degree}
                  </h3>
                  <p class="text-gray-600 dark:text-gray-400">{edu.institution}</p>
                  <p class="text-sm text-gray-500 dark:text-gray-400">{edu.year}</p>
                </div>
              ))
            }
          </div>
        </div>

        <div>
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">{t('certifications.title')}</h2>
          <div class="space-y-6">
            {
              certifications.map((cert) => (
                <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
                  <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                    {cert.name}
                  </h3>
                  <p class="text-gray-600 dark:text-gray-400">{cert.issuer}</p>
                  <p class="text-sm text-gray-500 dark:text-gray-400">{cert.year}</p>
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>
